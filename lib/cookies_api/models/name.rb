# cookies_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module CookiesApi
  # Generic name, with an alternative label.
  class Name < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Display label.
    # @return [String]
    attr_accessor :label

    # Alternate display label.
    # @return [String]
    attr_accessor :alt

    # Primary name.
    # @return [String]
    attr_accessor :primary

    # Display name for this record. Overrides all other names.
    # @return [String]
    attr_accessor :display

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['label'] = 'label'
      @_hash['alt'] = 'alt'
      @_hash['primary'] = 'primary'
      @_hash['display'] = 'display'
      @_hash
    end

    # An array for optional fields
    def optionals
      %w[
        label
        alt
        primary
        display
      ]
    end

    # An array for nullable fields
    def nullables
      []
    end

    def initialize(label = nil,
                   alt = nil,
                   primary = nil,
                   display = nil)
      @label = label unless label == SKIP
      @alt = alt unless alt == SKIP
      @primary = primary unless primary == SKIP
      @display = display unless display == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      label = hash.key?('label') ? hash['label'] : SKIP
      alt = hash.key?('alt') ? hash['alt'] : SKIP
      primary = hash.key?('primary') ? hash['primary'] : SKIP
      display = hash.key?('display') ? hash['display'] : SKIP

      # Create object from extracted values.
      Name.new(label,
               alt,
               primary,
               display)
    end
  end
end
