# cookies_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module CookiesApi
  # Specifies a street address.
  class Address < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # ISO country code (3-character).
    # @return [String]
    attr_accessor :region_code

    # Regional postal code or zip code.
    # @return [String]
    attr_accessor :postal_code

    # State or province, as a two-letter ISO or national code.
    # @return [String]
    attr_accessor :administrative_area

    # City, village, or municipality name.
    # @return [String]
    attr_accessor :locality

    # Lines for the address itself.
    # @return [List of String]
    attr_accessor :address_lines

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['region_code'] = 'regionCode'
      @_hash['postal_code'] = 'postalCode'
      @_hash['administrative_area'] = 'administrativeArea'
      @_hash['locality'] = 'locality'
      @_hash['address_lines'] = 'addressLines'
      @_hash
    end

    # An array for optional fields
    def optionals
      []
    end

    # An array for nullable fields
    def nullables
      []
    end

    def initialize(region_code = nil,
                   postal_code = nil,
                   administrative_area = nil,
                   locality = nil,
                   address_lines = nil)
      @region_code = region_code unless region_code == SKIP
      @postal_code = postal_code unless postal_code == SKIP
      @administrative_area = administrative_area unless administrative_area == SKIP
      @locality = locality unless locality == SKIP
      @address_lines = address_lines unless address_lines == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      region_code = hash.key?('regionCode') ? hash['regionCode'] : SKIP
      postal_code = hash.key?('postalCode') ? hash['postalCode'] : SKIP
      administrative_area =
        hash.key?('administrativeArea') ? hash['administrativeArea'] : SKIP
      locality = hash.key?('locality') ? hash['locality'] : SKIP
      address_lines = hash.key?('addressLines') ? hash['addressLines'] : SKIP

      # Create object from extracted values.
      Address.new(region_code,
                  postal_code,
                  administrative_area,
                  locality,
                  address_lines)
    end
  end
end
